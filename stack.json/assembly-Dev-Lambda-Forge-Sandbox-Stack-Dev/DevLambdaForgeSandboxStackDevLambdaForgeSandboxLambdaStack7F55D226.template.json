{
 "Resources": {
  "DevLambdaForgeSandboxAPIA0449AC1": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "BinaryMediaTypes": [
     "multipart/form-data"
    ],
    "Description": "Dev Lambda-Forge-Sandbox API",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "Name": "Dev-Lambda-Forge-Sandbox-API"
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Resource"
   }
  },
  "DevLambdaForgeSandboxAPICloudWatchRole6D1FF18F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/CloudWatchRole/Resource"
   }
  },
  "DevLambdaForgeSandboxAPIAccount15D41BAA": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "DevLambdaForgeSandboxAPICloudWatchRole6D1FF18F",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "DevLambdaForgeSandboxAPIA0449AC1"
   ],
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Account"
   }
  },
  "DevLambdaForgeSandboxAPIDeployment5E1CC4D2249ad297a1f626b9199f369674a6ec76": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "DevLambdaForgeSandboxAPIdocsGET11E82004",
    "DevLambdaForgeSandboxAPIdocsCEBAED31",
    "DevLambdaForgeSandboxAPIsigninPOST2F340631",
    "DevLambdaForgeSandboxAPIsigninF3A830B9",
    "DevLambdaForgeSandboxAPIsignupPOSTB655A066",
    "DevLambdaForgeSandboxAPIsignup8643667D",
    "DevLambdaForgeSandboxAPIusersGET458FB3F1",
    "DevLambdaForgeSandboxAPIusers22E51D6B"
   ],
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Deployment/Resource"
   }
  },
  "DevLambdaForgeSandboxAPIDeploymentStagedev283619F3": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
    },
    "DeploymentId": {
     "Ref": "DevLambdaForgeSandboxAPIDeployment5E1CC4D2249ad297a1f626b9199f369674a6ec76"
    },
    "StageName": "dev"
   },
   "DependsOn": [
    "DevLambdaForgeSandboxAPIAccount15D41BAA"
   ],
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/DeploymentStage.dev/Resource"
   }
  },
  "DevLambdaForgeSandboxAPIusers22E51D6B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "DevLambdaForgeSandboxAPIA0449AC1",
      "RootResourceId"
     ]
    },
    "PathPart": "users",
    "RestApiId": {
     "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/users/Resource"
   }
  },
  "DevLambdaForgeSandboxAPIusersGETApiPermissionDevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackDevLambdaForgeSandboxAPI2F6F4117GETusers662556FB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Hello4A628BD4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
       },
       "/",
       {
        "Ref": "DevLambdaForgeSandboxAPIDeploymentStagedev283619F3"
       },
       "/GET/users"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/users/GET/ApiPermission.DevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackDevLambdaForgeSandboxAPI2F6F4117.GET..users"
   }
  },
  "DevLambdaForgeSandboxAPIusersGETApiPermissionTestDevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackDevLambdaForgeSandboxAPI2F6F4117GETusersEDEBA34B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Hello4A628BD4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
       },
       "/test-invoke-stage/GET/users"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/users/GET/ApiPermission.Test.DevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackDevLambdaForgeSandboxAPI2F6F4117.GET..users"
   }
  },
  "DevLambdaForgeSandboxAPIusersGET458FB3F1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "DevLambdaForgeSandboxAPIusers22E51D6B"
    },
    "RestApiId": {
     "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "jwtAuthorizer09E13E54"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "Hello4A628BD4",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/users/GET/Resource"
   }
  },
  "DevLambdaForgeSandboxAPIsigninF3A830B9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "DevLambdaForgeSandboxAPIA0449AC1",
      "RootResourceId"
     ]
    },
    "PathPart": "signin",
    "RestApiId": {
     "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/signin/Resource"
   }
  },
  "DevLambdaForgeSandboxAPIsigninPOSTApiPermissionDevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackDevLambdaForgeSandboxAPI2F6F4117POSTsignin479F98C6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Signin352C80E6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
       },
       "/",
       {
        "Ref": "DevLambdaForgeSandboxAPIDeploymentStagedev283619F3"
       },
       "/POST/signin"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/signin/POST/ApiPermission.DevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackDevLambdaForgeSandboxAPI2F6F4117.POST..signin"
   }
  },
  "DevLambdaForgeSandboxAPIsigninPOSTApiPermissionTestDevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackDevLambdaForgeSandboxAPI2F6F4117POSTsigninCEBDBAAC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Signin352C80E6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
       },
       "/test-invoke-stage/POST/signin"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/signin/POST/ApiPermission.Test.DevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackDevLambdaForgeSandboxAPI2F6F4117.POST..signin"
   }
  },
  "DevLambdaForgeSandboxAPIsigninPOST2F340631": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "DevLambdaForgeSandboxAPIsigninF3A830B9"
    },
    "RestApiId": {
     "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "Signin352C80E6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/signin/POST/Resource"
   }
  },
  "DevLambdaForgeSandboxAPIsignup8643667D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "DevLambdaForgeSandboxAPIA0449AC1",
      "RootResourceId"
     ]
    },
    "PathPart": "signup",
    "RestApiId": {
     "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/signup/Resource"
   }
  },
  "DevLambdaForgeSandboxAPIsignupPOSTApiPermissionDevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackDevLambdaForgeSandboxAPI2F6F4117POSTsignupB0FA6B21": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateUser1C98808B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
       },
       "/",
       {
        "Ref": "DevLambdaForgeSandboxAPIDeploymentStagedev283619F3"
       },
       "/POST/signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/signup/POST/ApiPermission.DevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackDevLambdaForgeSandboxAPI2F6F4117.POST..signup"
   }
  },
  "DevLambdaForgeSandboxAPIsignupPOSTApiPermissionTestDevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackDevLambdaForgeSandboxAPI2F6F4117POSTsignup73435563": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateUser1C98808B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
       },
       "/test-invoke-stage/POST/signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/signup/POST/ApiPermission.Test.DevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackDevLambdaForgeSandboxAPI2F6F4117.POST..signup"
   }
  },
  "DevLambdaForgeSandboxAPIsignupPOSTB655A066": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "DevLambdaForgeSandboxAPIsignup8643667D"
    },
    "RestApiId": {
     "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CreateUser1C98808B",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/signup/POST/Resource"
   }
  },
  "DevLambdaForgeSandboxAPIdocsCEBAED31": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "DevLambdaForgeSandboxAPIA0449AC1",
      "RootResourceId"
     ]
    },
    "PathPart": "docs",
    "RestApiId": {
     "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/docs/Resource"
   }
  },
  "DevLambdaForgeSandboxAPIdocsGET11E82004": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "DevLambdaForgeSandboxAPIdocsCEBAED31"
    },
    "RestApiId": {
     "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "Credentials": {
      "Fn::GetAtt": [
       "docsapigateways364AE85AF",
       "Arn"
      ]
     },
     "IntegrationHttpMethod": "GET",
     "IntegrationResponses": [
      {
       "StatusCode": "200"
      }
     ],
     "Type": "AWS",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":s3:path/gui-docs/Lambda-Forge-Sandbox/dev-swagger.html"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseModels": {
       "text/html": "Empty"
      },
      "ResponseParameters": {
       "method.response.header.Content-Type": true
      },
      "StatusCode": "200"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Dev-Lambda-Forge-Sandbox-API/Default/docs/GET/Resource"
   }
  },
  "SmUtilsLayer59AEAA91": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "f61d54af7601ba5344a26abbaa8b5ef2a414cd3a35c096d6c6ea252d3b6cf843.zip"
    },
    "CompatibleRuntimes": [
     "python3.9"
    ],
    "Description": ""
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/SmUtilsLayer/Resource",
    "aws:asset:path": "../asset.f61d54af7601ba5344a26abbaa8b5ef2a414cd3a35c096d6c6ea252d3b6cf843",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "JwtAuthorizerServiceRole7903A86B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/JwtAuthorizer/ServiceRole/Resource"
   }
  },
  "JwtAuthorizer08CECD9F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e21a8f2918819aa487bd83314dd3e9a202b137a029743e3f6d0b239d9d7be35a.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "JwtAuthorizerServiceRole7903A86B",
      "Arn"
     ]
    },
    "Description": "An authorizer for private lambda functions",
    "Environment": {
     "Variables": {
      "API_ARN": {
       "Fn::Join": [
        "",
        [
         "arn:aws:execute-api:us-east-2:211125768252:",
         {
          "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
         },
         "/*"
        ]
       ]
      }
     }
    },
    "FunctionName": "Dev-Lambda-Forge-Sandbox-JwtAuthorizer",
    "Handler": "src.main.lambda_handler",
    "Layers": [
     "arn:aws:lambda:us-east-2:770693421928:layer:Klayers-p39-PyJWT:3"
    ],
    "Runtime": "python3.9",
    "Timeout": 60
   },
   "DependsOn": [
    "JwtAuthorizerServiceRole7903A86B"
   ],
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/JwtAuthorizer/Resource",
    "aws:asset:path": "../asset.e21a8f2918819aa487bd83314dd3e9a202b137a029743e3f6d0b239d9d7be35a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "JwtAuthorizerDevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackjwtAuthorizer4576A93CPermissions61199B8D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "JwtAuthorizer08CECD9F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
       },
       "/authorizers/",
       {
        "Ref": "jwtAuthorizer09E13E54"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/JwtAuthorizer/DevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackjwtAuthorizer4576A93C:Permissions"
   }
  },
  "jwtAuthorizer09E13E54": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "Name": "DevLambdaForgeSandboxStackDevLambdaForgeSandboxLambdaStackjwtAuthorizer4576A93C",
    "RestApiId": {
     "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
    },
    "Type": "REQUEST",
    "AuthorizerResultTtlInSeconds": 0,
    "AuthorizerUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "JwtAuthorizer08CECD9F",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":apigateway:",
       {
        "Fn::Select": [
         3,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "JwtAuthorizer08CECD9F",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "JwtAuthorizer08CECD9F",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    },
    "IdentitySource": "context.identity.sourceIp"
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/jwt-Authorizer/Resource"
   }
  },
  "HelloServiceRole1E55EA16": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Hello/ServiceRole/Resource"
   }
  },
  "Hello4A628BD4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4afaf6f0679420bf67a1026a2b2a724462632d7cb770d4adb75585e90b2a6022.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "HelloServiceRole1E55EA16",
      "Arn"
     ]
    },
    "Description": "protected function",
    "FunctionName": "Dev-Lambda-Forge-Sandbox-Hello",
    "Handler": "src.main.lambda_handler",
    "Runtime": "python3.9",
    "Timeout": 60
   },
   "DependsOn": [
    "HelloServiceRole1E55EA16"
   ],
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Hello/Resource",
    "aws:asset:path": "../asset.4afaf6f0679420bf67a1026a2b2a724462632d7cb770d4adb75585e90b2a6022",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "SigninServiceRole24B8BB32": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Signin/ServiceRole/Resource"
   }
  },
  "SigninServiceRoleDefaultPolicy0BDE1D8A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-2:211125768252:table/Dev-Users",
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "kms:Decrypt",
       "Effect": "Allow",
       "Resource": "arn:aws:kms:us-east-2:211125768252:key/bb085039-a653-4b38-abad-b6dd4ce11ea4"
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:secretsmanager:us-east-2:211125768252:secret:jwt-yx2zBV"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SigninServiceRoleDefaultPolicy0BDE1D8A",
    "Roles": [
     {
      "Ref": "SigninServiceRole24B8BB32"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Signin/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "Signin352C80E6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d2f9c855e768fa14dac9a9bf2201427eb4d0700ff93b04af065fed0272eb2a95.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "SigninServiceRole24B8BB32",
      "Arn"
     ]
    },
    "Description": "Signin function",
    "Environment": {
     "Variables": {
      "USERS_TABLE_NAME": "Dev-Users",
      "KMS_KEY_ID": "bb085039-a653-4b38-abad-b6dd4ce11ea4",
      "JWT_SECRET_NAME": "jwt"
     }
    },
    "FunctionName": "Dev-Lambda-Forge-Sandbox-Signin",
    "Handler": "src.signin.main.lambda_handler",
    "Layers": [
     "arn:aws:lambda:us-east-2:770693421928:layer:Klayers-p39-PyJWT:3",
     {
      "Ref": "SmUtilsLayer59AEAA91"
     }
    ],
    "Runtime": "python3.9",
    "Timeout": 60
   },
   "DependsOn": [
    "SigninServiceRoleDefaultPolicy0BDE1D8A",
    "SigninServiceRole24B8BB32"
   ],
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/Signin/Resource",
    "aws:asset:path": "../asset.d2f9c855e768fa14dac9a9bf2201427eb4d0700ff93b04af065fed0272eb2a95",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CreateUserServiceRole583944EB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/CreateUser/ServiceRole/Resource"
   }
  },
  "CreateUserServiceRoleDefaultPolicy44CE0BDC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-2:211125768252:table/Dev-Users",
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:kms:us-east-2:211125768252:key/bb085039-a653-4b38-abad-b6dd4ce11ea4"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreateUserServiceRoleDefaultPolicy44CE0BDC",
    "Roles": [
     {
      "Ref": "CreateUserServiceRole583944EB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/CreateUser/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CreateUser1C98808B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d2f9c855e768fa14dac9a9bf2201427eb4d0700ff93b04af065fed0272eb2a95.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "CreateUserServiceRole583944EB",
      "Arn"
     ]
    },
    "Description": "Create a user with name and age on Dynamo DB",
    "Environment": {
     "Variables": {
      "USERS_TABLE_NAME": "Dev-Users",
      "KMS_KEY_ID": "bb085039-a653-4b38-abad-b6dd4ce11ea4"
     }
    },
    "FunctionName": "Dev-Lambda-Forge-Sandbox-CreateUser",
    "Handler": "src.signup.main.lambda_handler",
    "Runtime": "python3.9",
    "Timeout": 60
   },
   "DependsOn": [
    "CreateUserServiceRoleDefaultPolicy44CE0BDC",
    "CreateUserServiceRole583944EB"
   ],
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/CreateUser/Resource",
    "aws:asset:path": "../asset.d2f9c855e768fa14dac9a9bf2201427eb4d0700ff93b04af065fed0272eb2a95",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "docsapigateways364AE85AF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "RoleName": "Dev-Lambda-Forge-Sandbox-docs-S3"
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/docs-api-gateway-s3/Resource"
   }
  },
  "docsapigateways3DefaultPolicyB31627B2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3-object-lambda:Get*",
        "s3-object-lambda:List*",
        "s3:Get*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "docsapigateways3DefaultPolicyB31627B2",
    "Roles": [
     {
      "Ref": "docsapigateways364AE85AF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/docs-api-gateway-s3/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQT0/DMAzFP8vuaWAbF47dECfQpiJxnbzUdKZt0uWPplL1u+M0hW0n/95zYudlJVfPcrmAi8tUWWcNHeXw4UHVgq3DAB1V4PECvRwKdD7vSGy/9A3mSpmgvXjBrjF9i4zs3iieVmH0EvBVE6zCDbirmGcmfkd/MmW0ZirwHOLCwMrSD9pp778aBUHLzzNNmhPr3jSk+igTjaKB9liCHKKFtiXnyGjxBj3aT7ST4Nadfg1a+bnxx6Nw6wM4h97JPBbWchNUjT4mGuPZXfBd8Ndw07mYnnR1l5R5a3RJafC+50T6YS2Xj/Jp8e2IMss/Sy3KItVf2L12r60BAAA="
   },
   "Metadata": {
    "aws:cdk:path": "Dev-Lambda-Forge-Sandbox-Stack/Dev/Lambda-Forge-Sandbox-Lambda-Stack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "DevLambdaForgeSandboxAPIEndpoint43646411": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "DevLambdaForgeSandboxAPIDeploymentStagedev283619F3"
      },
      "/"
     ]
    ]
   }
  },
  "DevLambdaForgeSandboxAPIOutput": {
   "Description": "Dev Lambda-Forge-Sandbox API URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "DevLambdaForgeSandboxAPIA0449AC1"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "DevLambdaForgeSandboxAPIDeploymentStagedev283619F3"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}